/*
 * Copyright (C) 2016 Protein Metrics Inc. - All Rights Reserved.
 * Unauthorized copying or distribution of this file, via any medium is strictly prohibited.
 * Confidential.
 */

#ifndef PMI_QT_COMMON_CONFIG_H
#define PMI_QT_COMMON_CONFIG_H

/*! @file config-pmi_qt_common.h
    Generated by cmake from config-pmi_qt_common.h.cmake.
    Global configuration (defined at build time)
*/

//! @def PMI_QT_COMMON_VERSION_STRING
//! @brief Indicates the generic version string such as 2016.2.3
#define PMI_QT_COMMON_VERSION_STRING "@PROJECT_VERSION@"

//! @def PMI_QT_COMMON_GIT_VERSION
//! @brief Indicates the generic PMi version obtained from git tag matching "v[0-9].*"
#define PMI_QT_COMMON_GIT_VERSION "@PMI_GIT_VERSION@"

//! @def PMI_QT_COMMON_GIT_VERSION_INTACT
//! @brief Indicates the generic PMi Intact version obtained from git tag matching "n[0-9].*"
#define PMI_QT_COMMON_GIT_VERSION_INTACT "@PMI_GIT_VERSION_INTACT@"

//! @def PMI_QT_COMMON_GIT_VERSION_SUPERNOVO
//! @brief Indicates the generic PMi Supernovo version obtained from git tag matching "s[0-9].*"
#define PMI_QT_COMMON_GIT_VERSION_SUPERNOVO "@PMI_GIT_VERSION_SUPERNOVO@"

//! @def PMI_QT_COMMON_GIT_BRANCH_NAME
//! @brief Indicates the git branch which was used for compilation of the code
#define PMI_QT_COMMON_GIT_BRANCH_NAME "@PMI_GIT_BRANCH_NAME@"

//! @def PMI_QT_COMMON_BIN_INSTALL_DIR
//! @brief The subdirectory relative to the install prefix for executables.
#define PMI_QT_COMMON_BIN_INSTALL_DIR "@GENERIC_CMAKE_INSTALL_BINDIR@"

//! @def PMI_QT_COMMON_BUILD_TESTING
//! @brief Defined if testing is globally enabled.
#cmakedefine PMI_QT_COMMON_BUILD_TESTING

//! @def PMI_QT_COMMON_DOWNLOAD_TEST_DATA
//! @brief Defined if testing is globally enabled.
#cmakedefine PMI_QT_COMMON_DOWNLOAD_TEST_DATA

// -- common_ms configuration (TODO: do we need to move it to config-common_ms.h?)

//! @def PMI_MS_ENABLE_BRUKER_API
//! @brief Enable support for Bruker MS Reader
#cmakedefine PMI_MS_ENABLE_BRUKER_API

//! @def PMI_MS_CHECK_MS_READER_SCAN_DATA
//! @brief Enable validity checking of scan data by MSReader
#cmakedefine PMI_MS_CHECK_MS_READER_SCAN_DATA

//! @def PMI_MS_MZCALIBRATION_USE_MSREADER_TO_READ
//! @brief Enable using MS Reader for reading in MZ Calibration
#cmakedefine PMI_MS_MZCALIBRATION_USE_MSREADER_TO_READ

//! @def PMI_MS_ENABLE_AGILENT_API
//! @brief Enable support for Agilent MS Reader
#cmakedefine PMI_MS_ENABLE_AGILENT_API

//! @def PMI_MS_ENABLE_ABI_DISK_TO_MEMORY
//! @brief Enable support for ABSCIEX MS Reader
#cmakedefine PMI_MS_ENABLE_ABI_DISK_TO_MEMORY

//! @def PMI_MS_PICODECOMPRESS_USE_COMPRESSINFO
//! @brief Enable CompressInfo in Pico Decompress
#cmakedefine PMI_MS_PICODECOMPRESS_USE_COMPRESSINFO

//! @def PMI_MS_USE_SYSTEM_CHRONO
//! @brief Use system <chrono> API instead of boost::chrono
#cmakedefine PMI_MS_USE_SYSTEM_CHRONO

//! @def PMI_MS_OUTPUT_DEBUG_CENTROID_SMOOTHING_TO_FILE
//! @brief Output Centroid smoothing to file to debug it
#cmakedefine PMI_MS_OUTPUT_DEBUG_CENTROID_SMOOTHING_TO_FILE

//! @def PMI_MS_ENABLE_CENTROID_CACHE
//! @brief Enable Centroid cache
#cmakedefine PMI_MS_ENABLE_CENTROID_CACHE

//! @def PMI_MS_ENABLE_SHIMADZU_API
//! @brief Enable support for Shimadzu MS Reader
#cmakedefine PMI_MS_ENABLE_SHIMADZU_API

#ifdef PMI_QT_COMMON_BUILD_TESTING
#define PMI_COMMON_MS_TEST_EXPORT PMI_COMMON_MS_EXPORT
#else
#define PMI_COMMON_MS_TEST_EXPORT
#endif

#endif
